// Test basic connection teardown where local process closes first:
// the local process calls close() first, so we send a FIN, and receive an ACK.
// Then we receive a FIN and ACK it.

`../../common/defaults.sh
sysctl -q net.ipv4.tcp_ecn=3
sysctl -q net.ipv4.tcp_ecn_option=0
`

    0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
 +.01...0.011 connect(3, ..., ...) = 0
   +0 > [noecn] SEWA 0:0(0) <...>
   +0 < [ect1] SW. 0:0(0) ack 1 win 32768 <mss 1000,nop,wscale 6,nop,nop,sackOK>
   +0 > [ect0] EW. 1:1(0) ack 1

   +0 write(3, ..., 1000) = 1000
   +0 > [ect0] P5. 1:1001(1000) ack 1
   +0 < [ect0] .5 1:1(0) ack 1001 win 257

   +0 close(3) = 0
   +0 > [ect0] F5. 1001:1001(0) ack 1
   +0 < [ect0] .5 1:1(0) ack 1002 win 257

   +0 < [ect0] F5. 1:1(0) ack 1002 win 257
   +0 > [ect0] . 1002:1002(0) ack 2
